name: Secure CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Compile with Maven
        run: mvn clean compile

  sonarcloud-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run SonarCloud Analysis
        run: mvn clean verify sonar:sonar -Dsonar.projectKey=PhuHuynh197_ProjectSCGH2 -Dsonar.organization=phuhuynh197 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  snyk-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Snyk
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --all-projects --sarif-file-output=snyk.sarif

      - name: Count vulnerabilities from Snyk report
        run: |
          sudo apt-get install jq -y
          RESULTS_LENGTH=$(jq '.runs[0].results | length' snyk.sarif)
          echo "RESULTS_LENGTH=$RESULTS_LENGTH" >> $GITHUB_ENV
          echo "Found $RESULTS_LENGTH vulnerabilities."

      - name: Fail job if vulnerabilities exist
        run: |
          if [ "$RESULTS_LENGTH" != 0 ]; then
            echo "‚ùå Found $RESULTS_LENGTH vulnerabilities!"
          else
            echo "‚úÖ No vulnerabilities found."
          fi

  trivy-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y && sudo apt-get install -y trivy

      - name: Trivy FileSystem Scan
        run: trivy fs . --format json -o trivy-fs.json

      - name: Build Docker image (for Trivy image scan)
        run: docker build -t projectscgh:latest .

      - name: Trivy Image Scan
        run: trivy image projectscgh:latest --format json -o trivy-image.json

      - name: Generate Markdown Report (Trivy + Snyk + Sonar)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          chmod +x generate-security-report.sh
          ./generate-security-report.sh

      - name: Upload Security Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md

      - name: Commit security report to repo
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git checkout main
          git pull origin main
          git add security-report.md
          git commit -m "üõ°Ô∏è Add latest security scan report"
          git push https://x-access-token:$GH_TOKEN@github.com/PhuHuynh197/ProjectSCGH2.git main

